//
// This file was generated by the Eclipse Implementation of JAXB, v4.0.3 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
//


package plesk.xml.api;

import java.util.ArrayList;
import java.util.List;
import jakarta.xml.bind.JAXBElement;
import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlElement;
import jakarta.xml.bind.annotation.XmlElementRef;
import jakarta.xml.bind.annotation.XmlElementRefs;
import jakarta.xml.bind.annotation.XmlType;


/**
 * <p>Java class for DomainTemplateOutputType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>{@code
 * <complexType name="DomainTemplateOutputType">
 *   <complexContent>
 *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       <choice maxOccurs="unbounded">
 *         <element name="add" type="{}DomainTemplateAddOutputType"/>
 *         <element name="get" type="{}DomainTemplateGetOutputType"/>
 *         <element name="del" type="{}DomainTemplateDeleteOutputType"/>
 *         <element name="set" type="{}DomainTemplateSetOutputType"/>
 *         <element name="add-package">
 *           <complexType>
 *             <complexContent>
 *               <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 <sequence>
 *                   <element name="result" type="{}DomainTemplateResultFilterType" maxOccurs="unbounded"/>
 *                 </sequence>
 *               </restriction>
 *             </complexContent>
 *           </complexType>
 *         </element>
 *         <element name="remove-package">
 *           <complexType>
 *             <complexContent>
 *               <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 <sequence>
 *                   <element name="result" type="{}DomainTemplateResultFilterType" maxOccurs="unbounded"/>
 *                 </sequence>
 *               </restriction>
 *             </complexContent>
 *           </complexType>
 *         </element>
 *         <element name="enable-aps-filter">
 *           <complexType>
 *             <complexContent>
 *               <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 <sequence>
 *                   <element name="result" type="{}DomainTemplateResultFilterType" maxOccurs="unbounded"/>
 *                 </sequence>
 *               </restriction>
 *             </complexContent>
 *           </complexType>
 *         </element>
 *         <element name="disable-aps-filter">
 *           <complexType>
 *             <complexContent>
 *               <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 <sequence>
 *                   <element name="result" type="{}DomainTemplateResultFilterType" maxOccurs="unbounded"/>
 *                 </sequence>
 *               </restriction>
 *             </complexContent>
 *           </complexType>
 *         </element>
 *         <element name="add-plan-item">
 *           <complexType>
 *             <complexContent>
 *               <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 <sequence>
 *                   <element name="result" type="{}DomainTemplatePlanItemResultType" maxOccurs="unbounded"/>
 *                 </sequence>
 *               </restriction>
 *             </complexContent>
 *           </complexType>
 *         </element>
 *         <element name="remove-plan-item">
 *           <complexType>
 *             <complexContent>
 *               <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 <sequence>
 *                   <element name="result" type="{}DomainTemplatePlanItemResultType" maxOccurs="unbounded"/>
 *                 </sequence>
 *               </restriction>
 *             </complexContent>
 *           </complexType>
 *         </element>
 *         <element name="get-limit-descriptor">
 *           <complexType>
 *             <complexContent>
 *               <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 <sequence>
 *                   <element name="result" type="{}DomainTemplateDescriptorOutput" maxOccurs="unbounded"/>
 *                 </sequence>
 *               </restriction>
 *             </complexContent>
 *           </complexType>
 *         </element>
 *         <element name="get-permission-descriptor">
 *           <complexType>
 *             <complexContent>
 *               <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 <sequence>
 *                   <element name="result" type="{}DomainTemplateDescriptorOutput" maxOccurs="unbounded"/>
 *                 </sequence>
 *               </restriction>
 *             </complexContent>
 *           </complexType>
 *         </element>
 *         <element name="get-physical-hosting-descriptor">
 *           <complexType>
 *             <complexContent>
 *               <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *                 <sequence>
 *                   <element name="result" type="{}DomainTemplateDescriptorOutput" maxOccurs="unbounded"/>
 *                 </sequence>
 *               </restriction>
 *             </complexContent>
 *           </complexType>
 *         </element>
 *         <element name="db-servers" type="{}DomainTemplateDbServersOutputType"/>
 *         <element name="duplicate" type="{}DomainTemplateAddOutputType"/>
 *       </choice>
 *     </restriction>
 *   </complexContent>
 * </complexType>
 * }</pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "DomainTemplateOutputType", propOrder = {
    "addOrGetOrDel"
})
public class DomainTemplateOutputType {

    @XmlElementRefs({
        @XmlElementRef(name = "add", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "get", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "del", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "set", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "add-package", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "remove-package", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "enable-aps-filter", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "disable-aps-filter", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "add-plan-item", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "remove-plan-item", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "get-limit-descriptor", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "get-permission-descriptor", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "get-physical-hosting-descriptor", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "db-servers", type = JAXBElement.class, required = false),
        @XmlElementRef(name = "duplicate", type = JAXBElement.class, required = false)
    })
    protected List<JAXBElement<?>> addOrGetOrDel;

    /**
     * Gets the value of the addOrGetOrDel property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the Jakarta XML Binding object.
     * This is why there is not a {@code set} method for the addOrGetOrDel property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAddOrGetOrDel().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link JAXBElement }{@code <}{@link DomainTemplateAddOutputType }{@code >}
     * {@link JAXBElement }{@code <}{@link DomainTemplateAddOutputType }{@code >}
     * {@link JAXBElement }{@code <}{@link DomainTemplateDbServersOutputType }{@code >}
     * {@link JAXBElement }{@code <}{@link DomainTemplateDeleteOutputType }{@code >}
     * {@link JAXBElement }{@code <}{@link DomainTemplateGetOutputType }{@code >}
     * {@link JAXBElement }{@code <}{@link DomainTemplateOutputType.AddPackage }{@code >}
     * {@link JAXBElement }{@code <}{@link DomainTemplateOutputType.AddPlanItem }{@code >}
     * {@link JAXBElement }{@code <}{@link DomainTemplateOutputType.DisableApsFilter }{@code >}
     * {@link JAXBElement }{@code <}{@link DomainTemplateOutputType.EnableApsFilter }{@code >}
     * {@link JAXBElement }{@code <}{@link DomainTemplateOutputType.GetLimitDescriptor }{@code >}
     * {@link JAXBElement }{@code <}{@link DomainTemplateOutputType.GetPermissionDescriptor }{@code >}
     * {@link JAXBElement }{@code <}{@link DomainTemplateOutputType.GetPhysicalHostingDescriptor }{@code >}
     * {@link JAXBElement }{@code <}{@link DomainTemplateOutputType.RemovePackage }{@code >}
     * {@link JAXBElement }{@code <}{@link DomainTemplateOutputType.RemovePlanItem }{@code >}
     * {@link JAXBElement }{@code <}{@link DomainTemplateSetOutputType }{@code >}
     * 
     * 
     * @return
     *     The value of the addOrGetOrDel property.
     */
    public List<JAXBElement<?>> getAddOrGetOrDel() {
        if (addOrGetOrDel == null) {
            addOrGetOrDel = new ArrayList<>();
        }
        return this.addOrGetOrDel;
    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>{@code
     * <complexType>
     *   <complexContent>
     *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       <sequence>
     *         <element name="result" type="{}DomainTemplateResultFilterType" maxOccurs="unbounded"/>
     *       </sequence>
     *     </restriction>
     *   </complexContent>
     * </complexType>
     * }</pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "result"
    })
    public static class AddPackage {

        @XmlElement(required = true)
        protected List<DomainTemplateResultFilterType> result;

        /**
         * Gets the value of the result property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the Jakarta XML Binding object.
         * This is why there is not a {@code set} method for the result property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getResult().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link DomainTemplateResultFilterType }
         * 
         * 
         * @return
         *     The value of the result property.
         */
        public List<DomainTemplateResultFilterType> getResult() {
            if (result == null) {
                result = new ArrayList<>();
            }
            return this.result;
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>{@code
     * <complexType>
     *   <complexContent>
     *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       <sequence>
     *         <element name="result" type="{}DomainTemplatePlanItemResultType" maxOccurs="unbounded"/>
     *       </sequence>
     *     </restriction>
     *   </complexContent>
     * </complexType>
     * }</pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "result"
    })
    public static class AddPlanItem {

        @XmlElement(required = true)
        protected List<DomainTemplatePlanItemResultType> result;

        /**
         * Gets the value of the result property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the Jakarta XML Binding object.
         * This is why there is not a {@code set} method for the result property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getResult().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link DomainTemplatePlanItemResultType }
         * 
         * 
         * @return
         *     The value of the result property.
         */
        public List<DomainTemplatePlanItemResultType> getResult() {
            if (result == null) {
                result = new ArrayList<>();
            }
            return this.result;
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>{@code
     * <complexType>
     *   <complexContent>
     *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       <sequence>
     *         <element name="result" type="{}DomainTemplateResultFilterType" maxOccurs="unbounded"/>
     *       </sequence>
     *     </restriction>
     *   </complexContent>
     * </complexType>
     * }</pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "result"
    })
    public static class DisableApsFilter {

        @XmlElement(required = true)
        protected List<DomainTemplateResultFilterType> result;

        /**
         * Gets the value of the result property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the Jakarta XML Binding object.
         * This is why there is not a {@code set} method for the result property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getResult().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link DomainTemplateResultFilterType }
         * 
         * 
         * @return
         *     The value of the result property.
         */
        public List<DomainTemplateResultFilterType> getResult() {
            if (result == null) {
                result = new ArrayList<>();
            }
            return this.result;
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>{@code
     * <complexType>
     *   <complexContent>
     *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       <sequence>
     *         <element name="result" type="{}DomainTemplateResultFilterType" maxOccurs="unbounded"/>
     *       </sequence>
     *     </restriction>
     *   </complexContent>
     * </complexType>
     * }</pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "result"
    })
    public static class EnableApsFilter {

        @XmlElement(required = true)
        protected List<DomainTemplateResultFilterType> result;

        /**
         * Gets the value of the result property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the Jakarta XML Binding object.
         * This is why there is not a {@code set} method for the result property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getResult().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link DomainTemplateResultFilterType }
         * 
         * 
         * @return
         *     The value of the result property.
         */
        public List<DomainTemplateResultFilterType> getResult() {
            if (result == null) {
                result = new ArrayList<>();
            }
            return this.result;
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>{@code
     * <complexType>
     *   <complexContent>
     *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       <sequence>
     *         <element name="result" type="{}DomainTemplateDescriptorOutput" maxOccurs="unbounded"/>
     *       </sequence>
     *     </restriction>
     *   </complexContent>
     * </complexType>
     * }</pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "result"
    })
    public static class GetLimitDescriptor {

        @XmlElement(required = true)
        protected List<DomainTemplateDescriptorOutput> result;

        /**
         * Gets the value of the result property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the Jakarta XML Binding object.
         * This is why there is not a {@code set} method for the result property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getResult().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link DomainTemplateDescriptorOutput }
         * 
         * 
         * @return
         *     The value of the result property.
         */
        public List<DomainTemplateDescriptorOutput> getResult() {
            if (result == null) {
                result = new ArrayList<>();
            }
            return this.result;
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>{@code
     * <complexType>
     *   <complexContent>
     *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       <sequence>
     *         <element name="result" type="{}DomainTemplateDescriptorOutput" maxOccurs="unbounded"/>
     *       </sequence>
     *     </restriction>
     *   </complexContent>
     * </complexType>
     * }</pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "result"
    })
    public static class GetPermissionDescriptor {

        @XmlElement(required = true)
        protected List<DomainTemplateDescriptorOutput> result;

        /**
         * Gets the value of the result property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the Jakarta XML Binding object.
         * This is why there is not a {@code set} method for the result property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getResult().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link DomainTemplateDescriptorOutput }
         * 
         * 
         * @return
         *     The value of the result property.
         */
        public List<DomainTemplateDescriptorOutput> getResult() {
            if (result == null) {
                result = new ArrayList<>();
            }
            return this.result;
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>{@code
     * <complexType>
     *   <complexContent>
     *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       <sequence>
     *         <element name="result" type="{}DomainTemplateDescriptorOutput" maxOccurs="unbounded"/>
     *       </sequence>
     *     </restriction>
     *   </complexContent>
     * </complexType>
     * }</pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "result"
    })
    public static class GetPhysicalHostingDescriptor {

        @XmlElement(required = true)
        protected List<DomainTemplateDescriptorOutput> result;

        /**
         * Gets the value of the result property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the Jakarta XML Binding object.
         * This is why there is not a {@code set} method for the result property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getResult().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link DomainTemplateDescriptorOutput }
         * 
         * 
         * @return
         *     The value of the result property.
         */
        public List<DomainTemplateDescriptorOutput> getResult() {
            if (result == null) {
                result = new ArrayList<>();
            }
            return this.result;
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>{@code
     * <complexType>
     *   <complexContent>
     *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       <sequence>
     *         <element name="result" type="{}DomainTemplateResultFilterType" maxOccurs="unbounded"/>
     *       </sequence>
     *     </restriction>
     *   </complexContent>
     * </complexType>
     * }</pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "result"
    })
    public static class RemovePackage {

        @XmlElement(required = true)
        protected List<DomainTemplateResultFilterType> result;

        /**
         * Gets the value of the result property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the Jakarta XML Binding object.
         * This is why there is not a {@code set} method for the result property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getResult().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link DomainTemplateResultFilterType }
         * 
         * 
         * @return
         *     The value of the result property.
         */
        public List<DomainTemplateResultFilterType> getResult() {
            if (result == null) {
                result = new ArrayList<>();
            }
            return this.result;
        }

    }


    /**
     * <p>Java class for anonymous complex type.
     * 
     * <p>The following schema fragment specifies the expected content contained within this class.
     * 
     * <pre>{@code
     * <complexType>
     *   <complexContent>
     *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
     *       <sequence>
     *         <element name="result" type="{}DomainTemplatePlanItemResultType" maxOccurs="unbounded"/>
     *       </sequence>
     *     </restriction>
     *   </complexContent>
     * </complexType>
     * }</pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "result"
    })
    public static class RemovePlanItem {

        @XmlElement(required = true)
        protected List<DomainTemplatePlanItemResultType> result;

        /**
         * Gets the value of the result property.
         * 
         * <p>
         * This accessor method returns a reference to the live list,
         * not a snapshot. Therefore any modification you make to the
         * returned list will be present inside the Jakarta XML Binding object.
         * This is why there is not a {@code set} method for the result property.
         * 
         * <p>
         * For example, to add a new item, do as follows:
         * <pre>
         *    getResult().add(newItem);
         * </pre>
         * 
         * 
         * <p>
         * Objects of the following type(s) are allowed in the list
         * {@link DomainTemplatePlanItemResultType }
         * 
         * 
         * @return
         *     The value of the result property.
         */
        public List<DomainTemplatePlanItemResultType> getResult() {
            if (result == null) {
                result = new ArrayList<>();
            }
            return this.result;
        }

    }

}
