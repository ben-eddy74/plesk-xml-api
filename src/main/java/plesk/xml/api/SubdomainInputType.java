//
// This file was generated by the Eclipse Implementation of JAXB, v4.0.3 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
//


package plesk.xml.api;

import java.util.ArrayList;
import java.util.List;
import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlElement;
import jakarta.xml.bind.annotation.XmlElements;
import jakarta.xml.bind.annotation.XmlType;


/**
 * <p>Java class for SubdomainInputType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>{@code
 * <complexType name="SubdomainInputType">
 *   <complexContent>
 *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       <choice maxOccurs="unbounded">
 *         <element name="add" type="{}SubdomainAddInputType"/>
 *         <element name="get" type="{}SubdomainGetInputType"/>
 *         <element name="del" type="{}SubdomainDeleteInputType"/>
 *         <element name="set" type="{}SubdomainSetInputType"/>
 *         <element name="rename" type="{}SubdomainRenameInputType"/>
 *       </choice>
 *     </restriction>
 *   </complexContent>
 * </complexType>
 * }</pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "SubdomainInputType", propOrder = {
    "addOrGetOrDel"
})
public class SubdomainInputType {

    @XmlElements({
        @XmlElement(name = "add", type = SubdomainAddInputType.class),
        @XmlElement(name = "get", type = SubdomainGetInputType.class),
        @XmlElement(name = "del", type = SubdomainDeleteInputType.class),
        @XmlElement(name = "set", type = SubdomainSetInputType.class),
        @XmlElement(name = "rename", type = SubdomainRenameInputType.class)
    })
    protected List<Object> addOrGetOrDel;

    /**
     * Gets the value of the addOrGetOrDel property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the Jakarta XML Binding object.
     * This is why there is not a {@code set} method for the addOrGetOrDel property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAddOrGetOrDel().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link SubdomainAddInputType }
     * {@link SubdomainDeleteInputType }
     * {@link SubdomainGetInputType }
     * {@link SubdomainRenameInputType }
     * {@link SubdomainSetInputType }
     * 
     * 
     * @return
     *     The value of the addOrGetOrDel property.
     */
    public List<Object> getAddOrGetOrDel() {
        if (addOrGetOrDel == null) {
            addOrGetOrDel = new ArrayList<>();
        }
        return this.addOrGetOrDel;
    }

}
